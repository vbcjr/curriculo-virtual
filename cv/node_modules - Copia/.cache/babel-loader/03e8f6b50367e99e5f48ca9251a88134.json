{"ast":null,"code":"// UUID\n// https://gist.github.com/LeverOne/1308368\n\n/* jshint ignore:start */\nfunction uuid(a, b) {\n  for (b = a = ''; a++ < 36; b += a * 51 & 52 ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16) : '-');\n\n  return b;\n}\n/* jshint ignore:end */\n\n\nmodule.exports = {\n  // Empties properties\n  __empty: function (doc) {\n    this.forEach(doc, function (value, key) {\n      delete doc[key];\n    });\n  },\n  // Copies properties from an object to another\n  __update: function (dest, src) {\n    this.forEach(src, function (value, key) {\n      dest[key] = value;\n    });\n  },\n  // Removes an item from an array\n  __remove: function (array, item) {\n    var index = this.indexOf(array, item);\n    if (index !== -1) array.splice(index, 1);\n  },\n  __id: function () {\n    var id = this.id || 'id';\n    return id;\n  },\n  getById: function (collection, id) {\n    var self = this;\n    return this.find(collection, function (doc) {\n      if (self.has(doc, self.__id())) {\n        return doc[self.__id()].toString() === id.toString();\n      }\n    });\n  },\n  createId: function (collection, doc) {\n    return uuid();\n  },\n  insert: function (collection, doc) {\n    doc[this.__id()] = doc[this.__id()] || this.createId(collection, doc);\n    var d = this.getById(collection, doc[this.__id()]);\n    if (d) throw new Error('Insert failed, duplicate id');\n    collection.push(doc);\n    return doc;\n  },\n  upsert: function (collection, doc) {\n    if (doc[this.__id()]) {\n      // id is set\n      var d = this.getById(collection, doc[this.__id()]);\n\n      if (d) {\n        // replace properties of existing object\n        this.__empty(d);\n\n        this.assign(d, doc);\n      } else {\n        // push new object\n        collection.push(doc);\n      }\n    } else {\n      // create id and push new object\n      doc[this.__id()] = this.createId(collection, doc);\n      collection.push(doc);\n    }\n\n    return doc;\n  },\n  updateById: function (collection, id, attrs) {\n    var doc = this.getById(collection, id);\n\n    if (doc) {\n      this.assign(doc, attrs, {\n        [this.__id()]: doc[this.__id()]\n      });\n    }\n\n    return doc;\n  },\n  updateWhere: function (collection, predicate, attrs) {\n    var self = this;\n    var docs = this.filter(collection, predicate);\n\n    var key = this.__id();\n\n    docs.forEach(function (doc) {\n      self.assign(doc, attrs, {\n        [key]: doc[key]\n      });\n    });\n    return docs;\n  },\n  replaceById: function (collection, id, attrs) {\n    var doc = this.getById(collection, id);\n\n    if (doc) {\n      var docId = doc[this.__id()];\n\n      this.__empty(doc);\n\n      this.assign(doc, attrs, {\n        [this.__id()]: docId\n      });\n    }\n\n    return doc;\n  },\n  removeById: function (collection, id) {\n    var doc = this.getById(collection, id);\n\n    this.__remove(collection, doc);\n\n    return doc;\n  },\n  removeWhere: function (collection, predicate) {\n    var self = this;\n    var docs = this.filter(collection, predicate);\n    docs.forEach(function (doc) {\n      self.__remove(collection, doc);\n    });\n    return docs;\n  }\n};","map":{"version":3,"sources":["C:/Users/lucas/Desktop/TI/Entreprise-connection-fase-2-2022/node_modules/lodash-id/src/index.js"],"names":["uuid","a","b","Math","random","toString","module","exports","__empty","doc","forEach","value","key","__update","dest","src","__remove","array","item","index","indexOf","splice","__id","id","getById","collection","self","find","has","createId","insert","d","Error","push","upsert","assign","updateById","attrs","updateWhere","predicate","docs","filter","replaceById","docId","removeById","removeWhere"],"mappings":"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","sourcesContent":["// UUID\n// https://gist.github.com/LeverOne/1308368\n/* jshint ignore:start */\nfunction uuid (a, b) { for (b = a = ''; a++ < 36; b += a * 51 & 52 ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16) : '-');return b }\n/* jshint ignore:end */\n\nmodule.exports = {\n  // Empties properties\n  __empty: function (doc) {\n    this.forEach(doc, function (value, key) {\n      delete doc[key]\n    })\n  },\n\n  // Copies properties from an object to another\n  __update: function (dest, src) {\n    this.forEach(src, function (value, key) {\n      dest[key] = value\n    })\n  },\n\n  // Removes an item from an array\n  __remove: function (array, item) {\n    var index = this.indexOf(array, item)\n    if (index !== -1) array.splice(index, 1)\n  },\n\n  __id: function () {\n    var id = this.id || 'id'\n    return id\n  },\n\n  getById: function (collection, id) {\n    var self = this\n    return this.find(collection, function (doc) {\n      if (self.has(doc, self.__id())) {\n        return doc[self.__id()].toString() === id.toString()\n      }\n    })\n  },\n\n  createId: function (collection, doc) {\n    return uuid()\n  },\n\n  insert: function (collection, doc) {\n    doc[this.__id()] = doc[this.__id()] || this.createId(collection, doc)\n    var d = this.getById(collection, doc[this.__id()])\n    if (d) throw new Error('Insert failed, duplicate id')\n    collection.push(doc)\n    return doc\n  },\n\n  upsert: function (collection, doc) {\n    if (doc[this.__id()]) {\n      // id is set\n      var d = this.getById(collection, doc[this.__id()])\n      if (d) {\n        // replace properties of existing object\n        this.__empty(d)\n        this.assign(d, doc)\n      } else {\n        // push new object\n        collection.push(doc)\n      }\n    } else {\n      // create id and push new object\n      doc[this.__id()] = this.createId(collection, doc)\n      collection.push(doc)\n    }\n\n    return doc\n  },\n\n  updateById: function (collection, id, attrs) {\n    var doc = this.getById(collection, id)\n\n    if (doc) {\n      this.assign(doc, attrs, {[this.__id()]: doc[this.__id()]})\n    }\n\n    return doc\n  },\n\n  updateWhere: function (collection, predicate, attrs) {\n    var self = this\n    var docs = this.filter(collection, predicate)\n    var key = this.__id()\n\n    docs.forEach(function (doc) {\n      self.assign(doc, attrs, {[key]: doc[key]})\n    })\n\n    return docs\n  },\n\n  replaceById: function (collection, id, attrs) {\n    var doc = this.getById(collection, id)\n\n    if (doc) {\n      var docId = doc[this.__id()]\n      this.__empty(doc)\n      this.assign(doc, attrs, {[this.__id()]: docId})\n    }\n\n    return doc\n  },\n\n  removeById: function (collection, id) {\n    var doc = this.getById(collection, id)\n\n    this.__remove(collection, doc)\n\n    return doc\n  },\n\n  removeWhere: function (collection, predicate) {\n    var self = this\n    var docs = this.filter(collection, predicate)\n\n    docs.forEach(function (doc) {\n      self.__remove(collection, doc)\n    })\n\n    return docs\n  }\n}\n"]},"metadata":{},"sourceType":"script"}