{"ast":null,"code":"\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst express = require('express');\n\nconst _ = require('lodash');\n\nconst pluralize = require('pluralize');\n\nconst write = require('./write');\n\nconst getFullURL = require('./get-full-url');\n\nconst utils = require('../utils');\n\nconst delay = require('./delay');\n\nmodule.exports = (db, name, opts) => {\n  // Create router\n  const router = express.Router();\n  router.use(delay); // Embed function used in GET /name and GET /name/id\n\n  function embed(resource, e) {\n    e && [].concat(e).forEach(externalResource => {\n      if (db.get(externalResource).value) {\n        const query = {};\n        const singularResource = pluralize.singular(name);\n        query[`${singularResource}${opts.foreignKeySuffix}`] = resource.id;\n        resource[externalResource] = db.get(externalResource).filter(query).value();\n      }\n    });\n  } // Expand function used in GET /name and GET /name/id\n\n\n  function expand(resource, e) {\n    e && [].concat(e).forEach(innerResource => {\n      const plural = pluralize(innerResource);\n\n      if (db.get(plural).value()) {\n        const prop = `${innerResource}${opts.foreignKeySuffix}`;\n        resource[innerResource] = db.get(plural).getById(resource[prop]).value();\n      }\n    });\n  } // GET /name\n  // GET /name?q=\n  // GET /name?attr=&attr=\n  // GET /name?_end=&\n  // GET /name?_start=&_end=&\n  // GET /name?_embed=&_expand=\n\n\n  function list(req, res, next) {\n    // Resource chain\n    let chain = db.get(name); // Remove q, _start, _end, ... from req.query to avoid filtering using those\n    // parameters\n\n    let q = req.query.q;\n    let _start = req.query._start;\n    let _end = req.query._end;\n    let _page = req.query._page;\n    const _sort = req.query._sort;\n    const _order = req.query._order;\n    let _limit = req.query._limit;\n    const _embed = req.query._embed;\n    const _expand = req.query._expand;\n    delete req.query.q;\n    delete req.query._start;\n    delete req.query._end;\n    delete req.query._sort;\n    delete req.query._order;\n    delete req.query._limit;\n    delete req.query._embed;\n    delete req.query._expand; // Automatically delete query parameters that can't be found\n    // in the database\n\n    Object.keys(req.query).forEach(query => {\n      const arr = db.get(name).value();\n\n      for (const i in arr) {\n        if (_.has(arr[i], query) || query === 'callback' || query === '_' || /_lte$/.test(query) || /_gte$/.test(query) || /_ne$/.test(query) || /_like$/.test(query)) return;\n      }\n\n      delete req.query[query];\n    });\n\n    if (q) {\n      // Full-text search\n      if (Array.isArray(q)) {\n        q = q[0];\n      }\n\n      q = q.toLowerCase();\n      chain = chain.filter(obj => {\n        for (const key in obj) {\n          const value = obj[key];\n\n          if (db._.deepQuery(value, q)) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n    }\n\n    Object.keys(req.query).forEach(key => {\n      // Don't take into account JSONP query parameters\n      // jQuery adds a '_' query parameter too\n      if (key !== 'callback' && key !== '_') {\n        // Always use an array, in case req.query is an array\n        const arr = [].concat(req.query[key]);\n        const isDifferent = /_ne$/.test(key);\n        const isRange = /_lte$/.test(key) || /_gte$/.test(key);\n        const isLike = /_like$/.test(key);\n        const path = key.replace(/(_lte|_gte|_ne|_like)$/, '');\n        chain = chain.filter(element => {\n          return arr.map(function (value) {\n            // get item value based on path\n            // i.e post.title -> 'foo'\n            const elementValue = _.get(element, path); // Prevent toString() failing on undefined or null values\n\n\n            if (elementValue === undefined || elementValue === null) {\n              return undefined;\n            }\n\n            if (isRange) {\n              const isLowerThan = /_gte$/.test(key);\n              return isLowerThan ? value <= elementValue : value >= elementValue;\n            } else if (isDifferent) {\n              return value !== elementValue.toString();\n            } else if (isLike) {\n              return new RegExp(value, 'i').test(elementValue.toString());\n            } else {\n              return value === elementValue.toString();\n            }\n          }).reduce((a, b) => isDifferent ? a && b : a || b);\n        });\n      }\n    }); // Sort\n\n    if (_sort) {\n      const _sortSet = _sort.split(',');\n\n      const _orderSet = (_order || '').split(',').map(s => s.toLowerCase());\n\n      chain = chain.orderBy(_sortSet, _orderSet);\n    } // Slice result\n\n\n    if (_end || _limit || _page) {\n      res.setHeader('X-Total-Count', chain.size());\n      res.setHeader('Access-Control-Expose-Headers', `X-Total-Count${_page ? ', Link' : ''}`);\n    }\n\n    if (_page) {\n      _page = parseInt(_page, 10);\n      _page = _page >= 1 ? _page : 1;\n      _limit = parseInt(_limit, 10) || 10;\n      const page = utils.getPage(chain.value(), _page, _limit);\n      const links = {};\n      const fullURL = getFullURL(req);\n\n      if (page.first) {\n        links.first = fullURL.replace(`page=${page.current}`, `page=${page.first}`);\n      }\n\n      if (page.prev) {\n        links.prev = fullURL.replace(`page=${page.current}`, `page=${page.prev}`);\n      }\n\n      if (page.next) {\n        links.next = fullURL.replace(`page=${page.current}`, `page=${page.next}`);\n      }\n\n      if (page.last) {\n        links.last = fullURL.replace(`page=${page.current}`, `page=${page.last}`);\n      }\n\n      res.links(links);\n      chain = _.chain(page.items);\n    } else if (_end) {\n      _start = parseInt(_start, 10) || 0;\n      _end = parseInt(_end, 10);\n      chain = chain.slice(_start, _end);\n    } else if (_limit) {\n      _start = parseInt(_start, 10) || 0;\n      _limit = parseInt(_limit, 10);\n      chain = chain.slice(_start, _start + _limit);\n    } // embed and expand\n\n\n    chain = chain.cloneDeep().forEach(function (element) {\n      embed(element, _embed);\n      expand(element, _expand);\n    });\n    res.locals.data = chain.value();\n    next();\n  } // GET /name/:id\n  // GET /name/:id?_embed=&_expand\n\n\n  function show(req, res, next) {\n    const _embed = req.query._embed;\n    const _expand = req.query._expand;\n    const resource = db.get(name).getById(req.params.id).value();\n\n    if (resource) {\n      // Clone resource to avoid making changes to the underlying object\n      const clone = _.cloneDeep(resource); // Embed other resources based on resource id\n      // /posts/1?_embed=comments\n\n\n      embed(clone, _embed); // Expand inner resources based on id\n      // /posts/1?_expand=user\n\n      expand(clone, _expand);\n      res.locals.data = clone;\n    }\n\n    next();\n  } // POST /name\n\n\n  function create(req, res, next) {\n    let resource;\n\n    if (opts._isFake) {\n      const id = db.get(name).createId().value();\n      resource = _objectSpread(_objectSpread({}, req.body), {}, {\n        id\n      });\n    } else {\n      resource = db.get(name).insert(req.body).value();\n    }\n\n    res.setHeader('Access-Control-Expose-Headers', 'Location');\n    res.location(`${getFullURL(req)}/${resource.id}`);\n    res.status(201);\n    res.locals.data = resource;\n    next();\n  } // PUT /name/:id\n  // PATCH /name/:id\n\n\n  function update(req, res, next) {\n    const id = req.params.id;\n    let resource;\n\n    if (opts._isFake) {\n      resource = db.get(name).getById(id).value();\n\n      if (req.method === 'PATCH') {\n        resource = _objectSpread(_objectSpread({}, resource), req.body);\n      } else {\n        resource = _objectSpread(_objectSpread({}, req.body), {}, {\n          id: resource.id\n        });\n      }\n    } else {\n      let chain = db.get(name);\n      chain = req.method === 'PATCH' ? chain.updateById(id, req.body) : chain.replaceById(id, req.body);\n      resource = chain.value();\n    }\n\n    if (resource) {\n      res.locals.data = resource;\n    }\n\n    next();\n  } // DELETE /name/:id\n\n\n  function destroy(req, res, next) {\n    let resource;\n\n    if (opts._isFake) {\n      resource = db.get(name).value();\n    } else {\n      resource = db.get(name).removeById(req.params.id).value(); // Remove dependents documents\n\n      const removable = db._.getRemovable(db.getState(), opts);\n\n      removable.forEach(item => {\n        db.get(item.name).removeById(item.id).value();\n      });\n    }\n\n    if (resource) {\n      res.locals.data = {};\n    }\n\n    next();\n  }\n\n  const w = write(db);\n  router.route('/').get(list).post(create, w);\n  router.route('/:id').get(show).put(update, w).patch(update, w).delete(destroy, w);\n  return router;\n};","map":{"version":3,"sources":["C:/Users/lucas/Desktop/TI/Entreprise-connection-fase-2-2022/node_modules/json-server/lib/server/router/plural.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","express","require","_","pluralize","write","getFullURL","utils","delay","module","exports","db","name","opts","router","Router","use","embed","resource","e","concat","externalResource","get","query","singularResource","singular","foreignKeySuffix","id","expand","innerResource","plural","prop","getById","list","req","res","next","chain","q","_start","_end","_page","_sort","_order","_limit","_embed","_expand","arr","has","test","Array","isArray","toLowerCase","deepQuery","isDifferent","isRange","isLike","path","replace","element","map","elementValue","undefined","isLowerThan","toString","RegExp","reduce","a","b","_sortSet","split","_orderSet","s","orderBy","setHeader","size","parseInt","page","getPage","links","fullURL","first","current","prev","last","items","slice","cloneDeep","locals","data","show","params","clone","create","_isFake","createId","body","insert","location","status","update","method","updateById","replaceById","destroy","removeById","removable","getRemovable","getState","item","w","route","post","put","patch","delete"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst express = require('express');\n\nconst _ = require('lodash');\n\nconst pluralize = require('pluralize');\n\nconst write = require('./write');\n\nconst getFullURL = require('./get-full-url');\n\nconst utils = require('../utils');\n\nconst delay = require('./delay');\n\nmodule.exports = (db, name, opts) => {\n  // Create router\n  const router = express.Router();\n  router.use(delay); // Embed function used in GET /name and GET /name/id\n\n  function embed(resource, e) {\n    e && [].concat(e).forEach(externalResource => {\n      if (db.get(externalResource).value) {\n        const query = {};\n        const singularResource = pluralize.singular(name);\n        query[`${singularResource}${opts.foreignKeySuffix}`] = resource.id;\n        resource[externalResource] = db.get(externalResource).filter(query).value();\n      }\n    });\n  } // Expand function used in GET /name and GET /name/id\n\n\n  function expand(resource, e) {\n    e && [].concat(e).forEach(innerResource => {\n      const plural = pluralize(innerResource);\n\n      if (db.get(plural).value()) {\n        const prop = `${innerResource}${opts.foreignKeySuffix}`;\n        resource[innerResource] = db.get(plural).getById(resource[prop]).value();\n      }\n    });\n  } // GET /name\n  // GET /name?q=\n  // GET /name?attr=&attr=\n  // GET /name?_end=&\n  // GET /name?_start=&_end=&\n  // GET /name?_embed=&_expand=\n\n\n  function list(req, res, next) {\n    // Resource chain\n    let chain = db.get(name); // Remove q, _start, _end, ... from req.query to avoid filtering using those\n    // parameters\n\n    let q = req.query.q;\n    let _start = req.query._start;\n    let _end = req.query._end;\n    let _page = req.query._page;\n    const _sort = req.query._sort;\n    const _order = req.query._order;\n    let _limit = req.query._limit;\n    const _embed = req.query._embed;\n    const _expand = req.query._expand;\n    delete req.query.q;\n    delete req.query._start;\n    delete req.query._end;\n    delete req.query._sort;\n    delete req.query._order;\n    delete req.query._limit;\n    delete req.query._embed;\n    delete req.query._expand; // Automatically delete query parameters that can't be found\n    // in the database\n\n    Object.keys(req.query).forEach(query => {\n      const arr = db.get(name).value();\n\n      for (const i in arr) {\n        if (_.has(arr[i], query) || query === 'callback' || query === '_' || /_lte$/.test(query) || /_gte$/.test(query) || /_ne$/.test(query) || /_like$/.test(query)) return;\n      }\n\n      delete req.query[query];\n    });\n\n    if (q) {\n      // Full-text search\n      if (Array.isArray(q)) {\n        q = q[0];\n      }\n\n      q = q.toLowerCase();\n      chain = chain.filter(obj => {\n        for (const key in obj) {\n          const value = obj[key];\n\n          if (db._.deepQuery(value, q)) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n    }\n\n    Object.keys(req.query).forEach(key => {\n      // Don't take into account JSONP query parameters\n      // jQuery adds a '_' query parameter too\n      if (key !== 'callback' && key !== '_') {\n        // Always use an array, in case req.query is an array\n        const arr = [].concat(req.query[key]);\n        const isDifferent = /_ne$/.test(key);\n        const isRange = /_lte$/.test(key) || /_gte$/.test(key);\n        const isLike = /_like$/.test(key);\n        const path = key.replace(/(_lte|_gte|_ne|_like)$/, '');\n        chain = chain.filter(element => {\n          return arr.map(function (value) {\n            // get item value based on path\n            // i.e post.title -> 'foo'\n            const elementValue = _.get(element, path); // Prevent toString() failing on undefined or null values\n\n\n            if (elementValue === undefined || elementValue === null) {\n              return undefined;\n            }\n\n            if (isRange) {\n              const isLowerThan = /_gte$/.test(key);\n              return isLowerThan ? value <= elementValue : value >= elementValue;\n            } else if (isDifferent) {\n              return value !== elementValue.toString();\n            } else if (isLike) {\n              return new RegExp(value, 'i').test(elementValue.toString());\n            } else {\n              return value === elementValue.toString();\n            }\n          }).reduce((a, b) => isDifferent ? a && b : a || b);\n        });\n      }\n    }); // Sort\n\n    if (_sort) {\n      const _sortSet = _sort.split(',');\n\n      const _orderSet = (_order || '').split(',').map(s => s.toLowerCase());\n\n      chain = chain.orderBy(_sortSet, _orderSet);\n    } // Slice result\n\n\n    if (_end || _limit || _page) {\n      res.setHeader('X-Total-Count', chain.size());\n      res.setHeader('Access-Control-Expose-Headers', `X-Total-Count${_page ? ', Link' : ''}`);\n    }\n\n    if (_page) {\n      _page = parseInt(_page, 10);\n      _page = _page >= 1 ? _page : 1;\n      _limit = parseInt(_limit, 10) || 10;\n      const page = utils.getPage(chain.value(), _page, _limit);\n      const links = {};\n      const fullURL = getFullURL(req);\n\n      if (page.first) {\n        links.first = fullURL.replace(`page=${page.current}`, `page=${page.first}`);\n      }\n\n      if (page.prev) {\n        links.prev = fullURL.replace(`page=${page.current}`, `page=${page.prev}`);\n      }\n\n      if (page.next) {\n        links.next = fullURL.replace(`page=${page.current}`, `page=${page.next}`);\n      }\n\n      if (page.last) {\n        links.last = fullURL.replace(`page=${page.current}`, `page=${page.last}`);\n      }\n\n      res.links(links);\n      chain = _.chain(page.items);\n    } else if (_end) {\n      _start = parseInt(_start, 10) || 0;\n      _end = parseInt(_end, 10);\n      chain = chain.slice(_start, _end);\n    } else if (_limit) {\n      _start = parseInt(_start, 10) || 0;\n      _limit = parseInt(_limit, 10);\n      chain = chain.slice(_start, _start + _limit);\n    } // embed and expand\n\n\n    chain = chain.cloneDeep().forEach(function (element) {\n      embed(element, _embed);\n      expand(element, _expand);\n    });\n    res.locals.data = chain.value();\n    next();\n  } // GET /name/:id\n  // GET /name/:id?_embed=&_expand\n\n\n  function show(req, res, next) {\n    const _embed = req.query._embed;\n    const _expand = req.query._expand;\n    const resource = db.get(name).getById(req.params.id).value();\n\n    if (resource) {\n      // Clone resource to avoid making changes to the underlying object\n      const clone = _.cloneDeep(resource); // Embed other resources based on resource id\n      // /posts/1?_embed=comments\n\n\n      embed(clone, _embed); // Expand inner resources based on id\n      // /posts/1?_expand=user\n\n      expand(clone, _expand);\n      res.locals.data = clone;\n    }\n\n    next();\n  } // POST /name\n\n\n  function create(req, res, next) {\n    let resource;\n\n    if (opts._isFake) {\n      const id = db.get(name).createId().value();\n      resource = _objectSpread(_objectSpread({}, req.body), {}, {\n        id\n      });\n    } else {\n      resource = db.get(name).insert(req.body).value();\n    }\n\n    res.setHeader('Access-Control-Expose-Headers', 'Location');\n    res.location(`${getFullURL(req)}/${resource.id}`);\n    res.status(201);\n    res.locals.data = resource;\n    next();\n  } // PUT /name/:id\n  // PATCH /name/:id\n\n\n  function update(req, res, next) {\n    const id = req.params.id;\n    let resource;\n\n    if (opts._isFake) {\n      resource = db.get(name).getById(id).value();\n\n      if (req.method === 'PATCH') {\n        resource = _objectSpread(_objectSpread({}, resource), req.body);\n      } else {\n        resource = _objectSpread(_objectSpread({}, req.body), {}, {\n          id: resource.id\n        });\n      }\n    } else {\n      let chain = db.get(name);\n      chain = req.method === 'PATCH' ? chain.updateById(id, req.body) : chain.replaceById(id, req.body);\n      resource = chain.value();\n    }\n\n    if (resource) {\n      res.locals.data = resource;\n    }\n\n    next();\n  } // DELETE /name/:id\n\n\n  function destroy(req, res, next) {\n    let resource;\n\n    if (opts._isFake) {\n      resource = db.get(name).value();\n    } else {\n      resource = db.get(name).removeById(req.params.id).value(); // Remove dependents documents\n\n      const removable = db._.getRemovable(db.getState(), opts);\n\n      removable.forEach(item => {\n        db.get(item.name).removeById(item.id).value();\n      });\n    }\n\n    if (resource) {\n      res.locals.data = {};\n    }\n\n    next();\n  }\n\n  const w = write(db);\n  router.route('/').get(list).post(create, w);\n  router.route('/:id').get(show).put(update, w).patch(update, w).delete(destroy, w);\n  return router;\n};"]},"metadata":{},"sourceType":"script"}